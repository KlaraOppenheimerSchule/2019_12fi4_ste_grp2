plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'jacoco'
    id 'io.gitlab.arturbosch.detekt' version '1.1.1'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group 'de.kos'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.google.code.gson:gson:2.8.6'
    testCompile "org.assertj:assertj-core:3.11.1"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.2.0"
    testCompile "org.junit.jupiter:junit-jupiter-params:5.2.0"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.2.0"
    compile 'com.sparkjava:spark-kotlin:1.0.0-alpha'
    compile 'org.jetbrains.exposed:exposed:0.17.6'
    compile 'com.zaxxer:HikariCP:3.4.1'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
    compile 'io.github.microutils:kotlin-logging:1.7.6'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        xml.destination = file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

detekt {
    toolVersion = "1.1.1"
    input = files("src/main/kotlin")
    filters = ".*/resources/.*,.*/build/.*"

    config = files("src/resources/detekt.yml")
    buildUponDefaultConfig = false

    reports {
        xml.enabled = true
        xml.destination = file("build/detekt/report.xml")
        html.enabled = true
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'de.kos.sport.MainKt'
    }
}

shadowJar {
    archiveBaseName = 'sportapp'

    manifest {
        inheritFrom project.tasks.jar.manifest
    }
}